#!/bin/bash
# Preparing a USB stick with a Debian installer and all the needed stuff
#
# Version 0.7.1 - kiyop - 06/05/2014 - convert mkfs into "dd if=/dev/zero bs=512 count=1 of=..."
# Version 0.7 - OLOC - 26/04/2014 - Local Repository
# Version 0.6 - OLOC - 04/04/2014 - _wget simplification 
# Version 0.5 - OLOC - 04/04/2014 - add retry option 
# Version 0.4 - OLOC - 27/03/2014
###################

DevUsb=sdb
Arch=i386
Src=iso-cd
CDRepo=http://cdimage.debian.org/debian-cd/current/${Arch}/${Src}
IsoMsk=${Arch}-CD-1.iso 

Name=$(basename $0)
LogDir=/var/log
LogFile=${LogDir}/${Name}.$(date +%Y%m%d).$(date +%H%M%S).log
LclRpt=/usr/share/${Name}/${Src}

###################
# Functions
_echo() {
        echo "$(date +%Y%m%d-%H%M%S) - $1" | tee -a ${LogFile}
}

_end() {
        RC=$1
        if [ ${RC} -ne 0 ] ; then
                _echo "[ERROR] The process is stopped [Return Code=${RC}]. See the log: ${LogFile}"
                exit ${RC}
        fi
}

_log() {
        echo "$(date +%Y%m%d-%H%M%S) * $1" >> ${LogFile}
}

_wget() {
	Url=$1/$2
	cd ${LclRpt}
        wget -c ${Url}
	_end $?

	# Check of the quality of the recieved iso file
	if [ ! -r ${LclRpt}/$2 ] ; then
        	_echo "- Cannot read the retrieved file $2."
        	_end 42
	fi
}


###################
# Start annoucement
_log "${Name} - start."
_log "Log is here: ${LogFile}"
_log "Local Repository is here: ${LclRpt}"
_log "Debug - user=$USER - home=$HOME"


###################
# Argument management

while getopts "cr" Option
do
	case ${Option} in
		r|R) typeset -i Retry=1 ;;
		c|C) typeset -i Clear=1 ;;
	esac
done
shift $(($OPTIND - 1))

###################
# Menu - Plug
while true
do
        clear
        echo "Please plug your USB stick and answer:"
        echo -e "\t1. The stick is ready."
        echo -e "\t2. I want to exit."
        echo -n "Enter your choice: "
        read PlugAnswer
        case "${PlugAnswer}" in
                1) break ;;
                2) exit;;
                *)  ;;
        esac
done

###################
# Checks of the USB device
SerialNumber=$(dmesg | grep 'SerialNumber' | tail -1 | awk '{print $NF}')
DevUsb1=$(ls -l /dev/disk/by-id | grep ${SerialNumber} | awk -F'../../' '{print $2}')
DevUsb2=$(dmesg | grep -i 'removable disk' | tail -1 | cut -c16- | awk '{print $3}' | tr -d '[]')

_log "Serial Number = ${SerialNumber}"
_log "DevUsb by SN in by-id = ${DevUsb1}"
_log "DevUsb by removable disk = ${DevUsb2}"

if [ -z ${DevUsb1} ] ; then
	_echo "[ERROR] The usb device seems to be unknown."
	_end 42
fi
if [[ "${DevUsb1}" == "${DevUsb2}" ]] ; then
	DevUsb=${DevUsb1}
else
	_echo "[WARNING] Confusing usb devices: ${DevUsb1} and ${DevUsb2}"
	_echo "Default usb device is: ${DevUsb}"
fi

_echo   "The detected USB stick is : [${DevUsb}]"
echo -n "Press enter to use it, Q to quit or name it: "
read StickAnswer
if [[ $(echo ${StickAnswer} | tr [:lower:] [:upper:]) == 'Q' ]] ; then
	_log "The user quits."
	exit
fi
if [ ! -z ${StickAnswer} ] ; then
        DevUsb=${StickAnswer}
fi
_echo "The USB stick to use is : ${DevUsb}"

###################
# Distribution choice
echo -e "\r"
while true
do
        echo "Distributions: "
        echo -e "\t1. The default one"
        echo -e "\t2. kde"
        echo -e "\t3. lxde"
        echo -e "\t4. netinst"
        echo -e "\t5. xfce"
	echo -e "\tq. I change my mind and I want to quit\r"
        echo -n "Enter your choice: "
        read PlugAnswer
        case "${PlugAnswer}" in
		q*|Q*) _log "The user quits" ; exit;;
		1) IsoMsk=${Arch}-CD-1.iso      ; break ;;
		2) IsoMsk=${Arch}-kde-CD-1.iso  ; break ;;
		3) IsoMsk=${Arch}-lxde-CD-1.iso ; break ;;
		4) IsoMsk=${Arch}-netinst.iso   ; break ;;
		5) IsoMsk=${Arch}-xfce-CD-1.iso ; break ;;
                *) ;;
	esac
done
_log "Distribution choice: ${IsoMsk}"

###################
# Preparation of the Local Repository
if [ ${Clear} ] ; then
	_echo "Clearing the local repository ${LclRpt}..."
	_log "rm -Rf ${LclRpt} 2>/dev/null"
	      rm -Rf ${LclRpt} 2>/dev/null
fi
mkdir -p ${LclRpt} 2>/dev/null
CurDir=$(pwd)
cd ${LclRpt}

###################
# Retrieve 
_echo "Retrieve of the iso file in progress..."
_wget ${CDRepo} MD5SUMS

Search=$(grep ${IsoMsk} MD5SUMS)
IsoMd5s=$(echo ${Search} | awk '{print $1}')
IsoFile=$(echo ${Search} | awk '{print $2}')

_log "$(ls -l ${LclRpt}/${IsoFile})"
if [ ! ${Retry} ] ; then
	_log "rm -f ${LclRpt}/${IsoFile} 2>/dev/null"
	      rm -f ${LclRpt}/${IsoFile} 2>/dev/null
fi
_wget ${CDRepo} ${IsoFile}
_log "The md5sum is: ${IsoMd5s}"

_echo "Cheking md5 sum in progress..."
if [ $(md5sum ${IsoFile} | awk '{print $1}') != ${IsoMd5s} ] ; then
	_echo "[ERROR] The md5 sum is not check."
	_end 42
fi
_echo "Retrieved iso file is: ${IsoFile}"

###################
_echo "The preparation of ${DevUsb} is in progress..."
#Â kiyop - _log "mkfs /dev/${DevUsb}"
# kiyop -      mkfs /dev/${DevUsb}
_log "dd if=/dev/zero bs=512 count=1 of=/dev/${DevUsb}"
      dd if=/dev/zero bs=512 count=1 of=/dev/${DevUsb}
_log "dd if=${LclRpt}/${IsoFile} of=/dev/${DevUsb}"
      dd if=${LclRpt}/${IsoFile} of=/dev/${DevUsb} ; sync
_echo "The preparation of ${DevUsb} is done."

###################
# Clean up
_echo "Clean-up in progress..."
cd ${CurDir}
rm -f ${LclRpt}/MD5SUMS 2>/dev/null
_log "Clean-up done."

###################
# End annoucement
_echo "Stick preparation done. All details in ${LogFile} ."
_log "${Name} - end."
